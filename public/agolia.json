[
  {
    "url": "/",
    "hierarchy": {
      "lvl0": "Getting started",
      "lvl1": "quick-start\" description=\"Step-by-step guides to setting up your system and installing the library.\" /%}"
    },
    "content": "{% quick-link title=\"Architecture guide\" icon=\"presets\" href=\"/\" description=\"Learn how the internals work and contribute.\" /%}  {% quick-link title=\"Widget\" icon=\"plugins\" href=\"/\" description=\"Integrate the checkout widget into your website without programming it from scratch.\" /%}  {% quick-link title=\"API reference\" icon=\"theming\" href=\"/\" description=\"See the entiere API reference.\" /%}  {% /quick-links %}  ---",
    "type": "lvl1"
  },
  {
    "url": "/",
    "hierarchy": { "lvl0": "Getting started", "lvl1": "Quick start" },
    "content": "Do you want to start right away? Then install Palindrome Crypto Pay with a command line.",
    "type": "lvl1"
  },
  {
    "url": "/",
    "hierarchy": {
      "lvl0": "Getting started",
      "lvl1": "Installing dependencies"
    },
    "content": "The SDK is written in **TypeScript** and can be imported into React, Vue and Angular applications. The SDK will be also in other languages such as **Go** and **Python** available.  ```typescript yarn @Palindromepay/sdk ```  After the library is installed just importing it to you (decentralized) application.",
    "type": "lvl1"
  },
  {
    "url": "/",
    "hierarchy": { "lvl0": "Getting started", "lvl1": "Importing the library" },
    "content": "```js // App.tsx import {   PalindromePayCreatePayment,   PalindromePayOrder,   PalindromePaySend,   PalindromePayWithdraw, } from '@Palindromepay/sdk' ```  {% callout title=\"You should know!\" %} We will start with creating your own Crypto Payment. Each payment system is encapsuled and the image/docs and description are saved encrypted on decentralized web3 storage.  There are two ways to create a payment system:  a) Using the library directly and calling the function `PalindromePayCreatePayment.init()` within your implementation.  b) Or you can create it over the page [link](https://Palindromepay.app/create-crypto-payment) if you want to skip an own implementation. The result is that you get a `paymentSystemUID`, `orderBookUID`which is essential for the Crypto Payment System.  {% /callout %}  ---",
    "type": "lvl1"
  },
  {
    "url": "/",
    "hierarchy": {
      "lvl0": "Getting started",
      "lvl1": "Join the Discord Dev Channel"
    },
    "content": "If you need help then write us at [Discord](https://discord.com/invite/5mwebaUMpk)",
    "type": "lvl1"
  },
  {
    "url": "/docs/create-crypto-payment",
    "hierarchy": { "lvl0": "Create Crypto Payment", "lvl1": "Init" },
    "content": "Call the `Init()` function to create the payment system. In the background an own contract called PalindromePaymentSystem",
    "type": "lvl1"
  },
  {
    "url": "/docs/create-crypto-payment",
    "hierarchy": { "lvl0": "Create Crypto Payment", "lvl1": "Example Code" },
    "content": "In the first step you need to import the Palindrome Pay SDK into your JavaScript/TypeScript project.  ```js import { PalindromePayCreatePayment } from '@Palindromepay/sdk' ```  **Interface**  ```js export interface IInit {   signer: any; } ```  **Function**  ```js PalindromePayCreatePayment.init(args) ```  **Params**  | Name   | Type | Description                                     | Result  | | ------ | ---- | ----------------------------------------------- | ------- | | signer | any  | Sending transactions a signer need to be passed | boolean |",
    "type": "lvl1"
  },
  {
    "url": "/docs/create-crypto-payment",
    "hierarchy": { "lvl0": "Create Crypto Payment", "lvl1": "Example Code" },
    "content": "```js try {  const args: IInit = {     signer: signer,   ;   const status = await PalindromePayCreatePayment.init(args);   if (status) {     /** do something */   } } catch(e: any) {   console.log(e); } ```  ---",
    "type": "lvl1"
  },
  {
    "url": "/docs/create-crypto-payment",
    "hierarchy": {
      "lvl0": "Create Crypto Payment",
      "lvl1": "Using the Wizard creating the payment system"
    },
    "content": "You are also able to use the lightweight-wizard to create the payment-system [link](https://Palindromepay.app/create-crypto-payment)",
    "type": "lvl1"
  }
]
